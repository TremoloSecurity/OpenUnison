/*******************************************************************************
 * Copyright 2016 Tremolo Security, Inc.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *     http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *******************************************************************************/
package com.tremolosecurity.provisioning.objects;
// Generated Apr 7, 2016 3:31:46 PM by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import jakarta.persistence.*;

/**
 * Approvals generated by hbm2java
 */
@Entity
@Table(name = "approvals")
public class Approvals implements java.io.Serializable {

	private int id;
	private Approvers approvers;
	private String label;
	private Workflows workflow;
	private String workflowObj;
	private Date createTs;
	private Date approvedTs;
	private Integer approved;
	private String reason;
	private Set<AllowedApprovers> allowedApproverses = new HashSet<AllowedApprovers>(0);
	private Set<Escalation> escalations = new HashSet<Escalation>(0);
	private Set<AuditLogs> auditLogses = new HashSet<AuditLogs>(0);

	public Approvals() {
	}

	public Approvals(int id, Workflows workflow) {
		this.id = id;
		this.workflow = workflow;
	}

	public Approvals(int id, Approvers approvers, String label, Workflows workflow, String workflowObj, Date createTs,
			Date approvedTs, Integer approved, String reason, Set<AllowedApprovers> allowedApproverses,
			Set<Escalation> escalations, Set<AuditLogs> auditLogses) {
		this.id = id;
		this.approvers = approvers;
		this.label = label;
		this.workflow = workflow;
		this.workflowObj = workflowObj;
		this.createTs = createTs;
		this.approvedTs = approvedTs;
		this.approved = approved;
		this.reason = reason;
		this.allowedApproverses = allowedApproverses;
		this.escalations = escalations;
		this.auditLogses = auditLogses;
	}

	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "approver")
	public Approvers getApprovers() {
		return this.approvers;
	}

	public void setApprovers(Approvers approvers) {
		this.approvers = approvers;
	}

	@Column(name = "label")
	public String getLabel() {
		return this.label;
	}

	public void setLabel(String label) {
		this.label = label;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "workflow", nullable = false)
	public Workflows getWorkflow() {
		return this.workflow;
	}

	public void setWorkflow(Workflows workflow) {
		this.workflow = workflow;
	}

	@Column(name = "workflowObj", columnDefinition="TEXT")
	public String getWorkflowObj() {
		return this.workflowObj;
	}

	public void setWorkflowObj(String workflowObj) {
		this.workflowObj = workflowObj;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createTS", length = 23)
	public Date getCreateTs() {
		return this.createTs;
	}

	public void setCreateTs(Date createTs) {
		this.createTs = createTs;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "approvedTS", length = 23)
	public Date getApprovedTs() {
		return this.approvedTs;
	}

	public void setApprovedTs(Date approvedTs) {
		this.approvedTs = approvedTs;
	}

	@Column(name = "approved")
	public Integer getApproved() {
		return this.approved;
	}

	public void setApproved(Integer approved) {
		this.approved = approved;
	}

	@Column(name = "reason")
	public String getReason() {
		return this.reason;
	}

	public void setReason(String reason) {
		this.reason = reason;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "approvals", cascade = CascadeType.PERSIST, orphanRemoval = true)
	public Set<AllowedApprovers> getAllowedApproverses() {
		return this.allowedApproverses;
	}

	public void setAllowedApproverses(Set<AllowedApprovers> allowedApproverses) {
		this.allowedApproverses = allowedApproverses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "approvals" , cascade = CascadeType.PERSIST, orphanRemoval = true)
	public Set<Escalation> getEscalations() {
		return this.escalations;
	}

	public void setEscalations(Set<Escalation> escalations) {
		this.escalations = escalations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "approvals", cascade = CascadeType.PERSIST, orphanRemoval = true)
	public Set<AuditLogs> getAuditLogses() {
		return this.auditLogses;
	}

	public void setAuditLogses(Set<AuditLogs> auditLogses) {
		this.auditLogses = auditLogses;
	}

}
